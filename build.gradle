plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

bootJar{
	enabled = false
}

allprojects {
	repositories {
		mavenCentral()
		flatDir {
			dirs 'lib'
		}
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		runtimeOnly 'com.h2database:h2'
		implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'
		compileOnly 'org.projectlombok:lombok:1.18.32'
		annotationProcessor 'org.projectlombok:lombok:1.18.32'
		testCompileOnly 'org.projectlombok:lombok:1.18.32'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2' // or 'io.jsonwebtoken:jjwt-gson:0.11.2' for Gson
		implementation 'com.fasterxml.jackson.core:jackson-databind'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
		implementation 'javax.servlet:javax.servlet-api:4.0.1'
		implementation 'org.javers:javers-spring-boot-starter-sql:7.3.0'
		implementation 'io.sentry:sentry-spring-boot-starter:6.27.0'
		implementation 'io.sentry:sentry-logback:6.27.0'
		testImplementation 'org.mockito:mockito-core:3.9.0'
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
	}

	springBoot {
		mainClass = 'com.huzeji.TodoManagerApplication'
	}

	tasks.named('test') {
		useJUnitPlatform()
		finalizedBy 'jacocoTestReport' // Ensure that jacocoTestReport runs after tests
	}

	tasks.named( 'bootJar' ) {
		mainClass = 'com.huzeji.TodoManagerApplication'
	}

	jacocoTestReport {
		dependsOn test // Ensure tests are run before generating the report
		reports {
			xml.required = true
			csv.required = false
			html.required = true // Ensure HTML report is generated
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		}
	}

	task jacocoRootReport(type: JacocoReport) {
		dependsOn subprojects.test // Ensure all tests are run first

		additionalSourceDirs.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
		sourceDirectories.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
		classDirectories.setFrom(files(subprojects.sourceSets.main.output))

		executionData.setFrom(files(subprojects.jacocoTestReport.executionData))

		reports {
			xml.required = true
			csv.required = false
			html.required = true
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		}
	}
}
